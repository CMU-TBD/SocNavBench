[episodes_params]
# names of which tests to include in the final benchmark
tests=['t_eth_dense_against']

without_robot=False ; Whether or not to run a lite-version of the simulator without the robot


[t_ETH1]
map_name=ETH
pedestrian_datasets=["eth"] ; Starting position for the prerecorded agents
datasets_start_t = [0] ; Starting times for all the included datasets
ped_ranges=[(0, -1)] ; [start, end] range for the pedestrian datasets being use (-1 to include all agents)
## NOTE: all pos_3's are (x, y, theta)
agents_start=[] ; start pos_3's of the generated agent configs
agents_end=[] ; end pos_3's of the generated agent configs
robot_start_goal=[[8, 5, 1.5], [12, 15, 1.5]] ; start and goal pos_3's of the robot
max_time=20 ; maximum time provided for this test
write_episode_log=True ; to write the episode log at the end of the simulation

[t_ETH2]
map_name=ETH
pedestrian_datasets=["eth"]
datasets_start_t = [0]
ped_ranges=[(0, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[12, 15, 1.5], [6, 2, -1.5]]
max_time=60
write_episode_log=True

[t_eth_follow]
map_name=ETH
pedestrian_datasets=["eth"]
datasets_start_t = [0]
ped_ranges=[(238, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[1.5, 15.5, 0], [9.5,1,-1.5]]
max_time=60
write_episode_log=True

[t_eth_against]
map_name=ETH
pedestrian_datasets=["eth"]
datasets_start_t = [0]
ped_ranges=[(238, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[9.5,1,1.5], [1.5,15.5,3]]
max_time=60
write_episode_log=True

[t_eth_dense_flow]
map_name=ETH
pedestrian_datasets=["eth"]
datasets_start_t = [0]
ped_ranges=[(250, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[1.5, 15.5, 0], [9.5,1,-1.5]]
max_time=60
write_episode_log=True

[t_eth_dense_against]
map_name=ETH
pedestrian_datasets=["eth"]
datasets_start_t = [0]
ped_ranges=[(250, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[5,1,1.5], [12.5,15.5,0]]
max_time=60
write_episode_log=True


#Zara01
[t_zara1_basic_cross]
map_name=Zara
pedestrian_datasets=["zara01"]
datasets_start_t = [0]
ped_ranges=[(0, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[8.0, 8, 0], [15, 3, -0.2]]
max_time=60
write_episode_log=True

[t_zara1_wrap]
map_name=Zara
pedestrian_datasets=["zara01"]
datasets_start_t = [0]
ped_ranges=[(0, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[2, 2, 1.8], [17.5, 13, 0]]
max_time=50
write_episode_log=True

[t_zara1_dense]
map_name=Zara
pedestrian_datasets=["zara01"]
datasets_start_t = [0]
ped_ranges=[(78, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[2, 5, 0], [19.5, 5, 0]]
max_time=60
write_episode_log=True

[t_zara1_dense_rev]
map_name=Zara
pedestrian_datasets=["zara01"]
datasets_start_t = [0]
ped_ranges=[(78, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[19.5, 5, -3], [2, 5, -3]]
max_time=60
write_episode_log=True

[t_zara1_dense_cross]
map_name=Zara
pedestrian_datasets=["zara01"]
datasets_start_t = [0]
ped_ranges=[(78, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[14, 13, -1.5], [14, 1, -1.5]]
max_time=60
write_episode_log=True

[t_zara1_dense_crosswrap_rev]
map_name=Zara
pedestrian_datasets=["zara01"]
datasets_start_t = [0]
ped_ranges=[(78, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[4, 2, 0], [14, 13, -1.5]]
max_time=60
write_episode_log=True

#Zara02
[t_zara2]
map_name=Zara
pedestrian_datasets=["zara02"]
datasets_start_t = [0]
ped_ranges=[(0, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[8.0, 8.5, 0], [15, 3, -0.2]]
max_time=60
write_episode_log=True

[t_zara2_basic_against]
map_name=Zara
pedestrian_datasets=["zara02"]
datasets_start_t = [0]
ped_ranges=[(7, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[20, 5, -3], [1.5, 5, -3]]
max_time=60
write_episode_log=True

[t_zara2_wrap]
map_name=Zara
pedestrian_datasets=["zara02"]
datasets_start_t = [0]
ped_ranges=[(20, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[20, 13, -1.5], [1.5, 8, -1.5]]
max_time=60
write_episode_log=True

[t_zara2_wrap2]
map_name=Zara
pedestrian_datasets=["zara02"]
datasets_start_t = [0]
ped_ranges=[(20, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[20, 13, -1.5], [1.5, 1.5, -1.5]]
max_time=60
write_episode_log=True

[t_zara2_against_seq]
map_name=Zara
pedestrian_datasets=["zara02"]
datasets_start_t = [0]
ped_ranges=[(44, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[1.5, 5, 0], [20, 5, 0]]
max_time=60
write_episode_log=True



# Univ - obstacles and super dense crowds
[t_univ1]
map_name=Univ
pedestrian_datasets=["univ"]
datasets_start_t = [0]
ped_ranges=[(0, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[8.0, 8.5, 0], [15, 1, -0.2]]
max_time=60
write_episode_log=True

[t_univ_obstacle]
map_name=Univ
pedestrian_datasets=["univ"]
datasets_start_t = [0]
ped_ranges=[(0, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[16.5, 8.5, -1.6], [3, 12.5, -3.5]]
max_time=60
write_episode_log=True

[t_univ_trapTR]
map_name=Univ
pedestrian_datasets=["univ"]
datasets_start_t = [0]
ped_ranges=[(191, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[17.5, 12, -1.6], [2, 1, -3.14]]
max_time=60
write_episode_log=True

[t_univ_trapTR2]
map_name=Univ
pedestrian_datasets=["univ"]
datasets_start_t = [0]
ped_ranges=[(120, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[17.5, 12.5, -1.6], [2, 6, -3.14]]
max_time=60
write_episode_log=True

[t_univ_trapTL]
map_name=Univ
pedestrian_datasets=["univ"]
datasets_start_t = [0]
ped_ranges=[(205, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[2, 12.2, 1.5], [2, 1, -3.14]]
max_time=60
write_episode_log=True

[t_univ_trapBL]
map_name=Univ
pedestrian_datasets=["univ"]
datasets_start_t = [0]
ped_ranges=[(205, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[2, 1, -3.14], [17, 12, 1.5]]
max_time=60
write_episode_log=True

[t_univ_trapBR]
map_name=Univ
pedestrian_datasets=["univ"]
datasets_start_t = [0]
ped_ranges=[(0, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[13.5, 1, -3.14], [8, 11.5, -3.14]]
max_time=60
write_episode_log=True

[t_univ_across]
map_name=Univ
pedestrian_datasets=["univ"]
datasets_start_t = [0]
ped_ranges=[(0, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[17.5, 6, -3.14], [1, 12, -3.14]]
max_time=60
write_episode_log=True


# Hotel (single) mostly a wide corridor
[t_hotel_against]
map_name=HotelSmall
pedestrian_datasets=["hotel"]
datasets_start_t = [0]
ped_ranges=[(361, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[2, 5, 0], [15, 5, 0.2]]
max_time=60
write_episode_log=True

[t_hotel_follow]
map_name=HotelSmall
pedestrian_datasets=["hotel"]
datasets_start_t = [0]
ped_ranges=[(361, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[15, 5, 0.2], [2, 5, 0]]
max_time=60
write_episode_log=True

[t_hotel_against_diag]
map_name=HotelSmall
pedestrian_datasets=["hotel"]
datasets_start_t = [0]
ped_ranges=[(361, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[2, 2, 1.5], [15, 10, 0.2]]
max_time=60
write_episode_log=True

[t_hotel_follow_diag]
map_name=HotelSmall
pedestrian_datasets=["hotel"]
datasets_start_t = [0]
ped_ranges=[(361, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[15, 10, 0.2], [2, 2, 1.5]]
max_time=60
write_episode_log=True

[t_hotel_cross]
map_name=HotelSmall
pedestrian_datasets=["hotel"]
datasets_start_t = [0]
ped_ranges=[(361, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[15, 10, 0.2], [2, 2, 1.5]]
max_time=60
write_episode_log=True

# DoubleHotel double corridor with obstacles in the middle
[t_dhotel_bottopmid]
map_name=DoubleHotel
pedestrian_datasets=["dhotel-top", "dhotel-bot"]
datasets_start_t = [0, 0]
ped_ranges=[(140, -1), (180, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[8, 1, -3], [9, 22.5, 1.5]]
max_time=60
write_episode_log=True

[t_dhotel_bottopleft]
map_name=DoubleHotel
pedestrian_datasets=["dhotel-top", "dhotel-bot"]
datasets_start_t = [0, 0]
ped_ranges=[(140, -1), (180, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[16.5, 2.5, -3], [3, 22.5, 1.5]]
max_time=60
write_episode_log=True

[t_dhotel_obstaclest]
map_name=DoubleHotel
pedestrian_datasets=["dhotel-top", "dhotel-bot"]
datasets_start_t = [0, 0]
ped_ranges=[(140, -1), (180, -1)]
agents_start=[]
agents_end=[]
robot_start_goal=[[4, 10, 0.4], [10, 20, 0.6]]
max_time=60
write_episode_log=True
